diff --git a/Makefile b/Makefile
index 75c128a..f275f3b 100644
--- a/Makefile
+++ b/Makefile
@@ -99,6 +99,8 @@ frdmkl03:
 	cp src/boot/ksdk1.1.0/glaux.h					build/ksdk1.1/work/boards/Warp
 	cp src/boot/ksdk1.1.0/CMakeLists-FRDMKL03.txt			build/ksdk1.1/work/demos/Warp/armgcc/Warp/CMakeLists.txt
 	cp src/boot/ksdk1.1.0/devMMA8451Q.*				build/ksdk1.1/work/demos/Warp/src/
+	cp src/boot/ksdk1.1.0/devSSD1331.*				build/ksdk1.1/work/demos/Warp/src/
+
 	cd build/ksdk1.1/work/lib/ksdk_platform_lib/armgcc/KL03Z4 && ./clean.sh; ./build_release.sh
 	cd build/ksdk1.1/work/demos/Warp/armgcc/Warp && ./clean.sh; ./build_release.sh
 	@echo "\n\nNow, run\n\n\tmake load-warp\n\n"
diff --git a/setup.conf b/setup.conf
index 2d51f8c..349450d 100644
--- a/setup.conf
+++ b/setup.conf
@@ -1,2 +1,2 @@
-JLINKPATH	=	<full path to JLink binary>
+JLINKPATH	=	/usr/bin/JLinkExe
 ARMGCC_DIR	= 	/usr/
diff --git a/src/boot/ksdk1.1.0/CMakeLists-FRDMKL03.txt b/src/boot/ksdk1.1.0/CMakeLists-FRDMKL03.txt
index 8560520..dbadd7b 100644
--- a/src/boot/ksdk1.1.0/CMakeLists-FRDMKL03.txt
+++ b/src/boot/ksdk1.1.0/CMakeLists-FRDMKL03.txt
@@ -93,6 +93,7 @@ ADD_EXECUTABLE(Warp
     "${ProjDirPath}/../../src/errstrsEN.c"
     "${ProjDirPath}/../../src/powermodes.c"
     "${ProjDirPath}/../../src/devMMA8451Q.c"
+    "${ProjDirPath}/../../src/devSSD1331.c"
     "${ProjDirPath}/../../src/SEGGER_RTT.c"
     "${ProjDirPath}/../../src/SEGGER_RTT_printf.c"
     "${ProjDirPath}/../../../../platform/drivers/src/i2c/fsl_i2c_irq.c"
diff --git a/src/boot/ksdk1.1.0/boot.c b/src/boot/ksdk1.1.0/boot.c
index 1e70bb7..95104bd 100644
--- a/src/boot/ksdk1.1.0/boot.c
+++ b/src/boot/ksdk1.1.0/boot.c
@@ -76,17 +76,19 @@
 /*
 * Include all sensors because they will be needed to decode flash.
 */
-#include "devADXL362.h"
-#include "devAMG8834.h"
+#if (!WARP_BUILD_ENABLE_FRDMKL03)
+	#include "devADXL362.h"
+	#include "devAMG8834.h"
+	#include "devMAG3110.h"
+	#include "devL3GD20H.h"
+	#include "devBME680.h"
+	#include "devBMX055.h"
+	#include "devCCS811.h"
+	#include "devHDC1000.h"
+	#include "devRV8803C7.h"
+#endif
+#include "devSSD1331.h"
 #include "devMMA8451Q.h"
-#include "devMAG3110.h"
-#include "devL3GD20H.h"
-#include "devBME680.h"
-#include "devBMX055.h"
-#include "devCCS811.h"
-#include "devHDC1000.h"
-#include "devRV8803C7.h"
-
 
 #if (WARP_BUILD_ENABLE_DEVADXL362)
 	volatile WarpSPIDeviceState			deviceADXL362State;
@@ -2019,7 +2021,7 @@ main(void)
 		}
 	}
 #endif
-
+	devSSD1331init();
 	while (1)
 	{
 		/*
diff --git a/src/boot/ksdk1.1.0/devSSD1331.c b/src/boot/ksdk1.1.0/devSSD1331.c
index 7c4eb63..6dccf68 100644
--- a/src/boot/ksdk1.1.0/devSSD1331.c
+++ b/src/boot/ksdk1.1.0/devSSD1331.c
@@ -1,20 +1,17 @@
 #include <stdint.h>
 
-/*
- *	config.h needs to come first
- */
-#include "config.h"
-
 #include "fsl_spi_master_driver.h"
 #include "fsl_port_hal.h"
 
+#include "config.h"
+
 #include "SEGGER_RTT.h"
 #include "gpio_pins.h"
 #include "warp.h"
 #include "devSSD1331.h"
 
-volatile uint8_t	inBuffer[1];
-volatile uint8_t	payloadBytes[1];
+volatile uint8_t	inBuffer[32];
+volatile uint8_t	payloadBytes[32];
 
 
 /*
@@ -27,6 +24,7 @@ enum
 	kSSD1331PinCSn		= GPIO_MAKE_PIN(HW_GPIOB, 13),
 	kSSD1331PinDC		= GPIO_MAKE_PIN(HW_GPIOA, 12),
 	kSSD1331PinRST		= GPIO_MAKE_PIN(HW_GPIOB, 0),
+	kSDD1331PinMISO		= GPIO_MAKE_PIN(HW_GPIOA, 6),
 };
 
 static int
@@ -77,7 +75,7 @@ devSSD1331init(void)
 	PORT_HAL_SetMuxMode(PORTA_BASE, 8u, kPortMuxAlt3);
 	PORT_HAL_SetMuxMode(PORTA_BASE, 9u, kPortMuxAlt3);
 
-	enableSPIpins();
+	warpEnableSPIpins();
 
 	/*
 	 *	Override Warp firmware's use of these pins.
@@ -139,12 +137,14 @@ devSSD1331init(void)
 	writeCommand(kSSD1331CommandCONTRASTC);		// 0x83
 	writeCommand(0x7D);
 	writeCommand(kSSD1331CommandDISPLAYON);		// Turn on oled panel
+	SEGGER_RTT_WriteString(0, "\r\n\tDone with initialization sequence...\n");
 
 	/*
 	 *	To use fill commands, you will have to issue a command to the display to enable them. See the manual.
 	 */
 	writeCommand(kSSD1331CommandFILL);
 	writeCommand(0x01);
+	SEGGER_RTT_WriteString(0, "\r\n\tDone with enabling fill...\n");
 
 	/*
 	 *	Clear Screen
@@ -154,13 +154,39 @@ devSSD1331init(void)
 	writeCommand(0x00);
 	writeCommand(0x5F);
 	writeCommand(0x3F);
+	SEGGER_RTT_WriteString(0, "\r\n\tDone with screen clear...\n");
 
 
 
 	/*
-	 *	Any post-initialization drawing commands go here.
+	 *	Read the manual for the SSD1331 (SSD1331_1.2.pdf) to figure
+	 *	out how to fill the entire screen with the brightest shade
+	 *	of green.
 	 */
-	//...
+
+	writeCommand(kSSD1331CommandDRAWRECT);
+	writeCommand(0x00);
+	writeCommand(0x00);
+	writeCommand(0x7F);
+	writeCommand(0x3F);
+	writeCommand(0x00);
+	writeCommand(0b00011110);
+	writeCommand(0x00);
+	writeCommand(0x00);
+	writeCommand(0b00011111);
+	writeCommand(0x00);
+
+	writeCommand(kSSD1331CommandCONTRASTB);
+	writeCommand(255);
+
+	writeCommand(kSSD1331CommandMASTERCURRENT);
+	writeCommand(0x0F);
+
+	
+
+
+
+	SEGGER_RTT_WriteString(0, "\r\n\tDone with draw rectangle...\n");
 
 
 
diff --git a/src/boot/ksdk1.1.0/gpio_pins.c b/src/boot/ksdk1.1.0/gpio_pins.c
index 0d4ad29..ca4eb58 100644
--- a/src/boot/ksdk1.1.0/gpio_pins.c
+++ b/src/boot/ksdk1.1.0/gpio_pins.c
@@ -38,7 +38,7 @@ gpio_output_pin_user_config_t	outputPins[] = {
 			.config.slewRate = kPortSlowSlewRate,
 			.config.driveStrength = kPortLowDriveStrength,
 		},
-		/*	We only use these as SPI, despite being connected to RTS/CTS on revC
+		// 	We only use these as SPI, despite being connected to RTS/CTS on revC
 		{
 			.pinName = kWarpPinSPI_MISO_UART_RTS,
 			.config.outputLogic = 1,
@@ -51,7 +51,7 @@ gpio_output_pin_user_config_t	outputPins[] = {
 			.config.slewRate = kPortSlowSlewRate,
 			.config.driveStrength = kPortLowDriveStrength,
 		},
-		*/
+		
 		{
 			.pinName = kWarpPinADXL362_SPI_nCS,
 			.config.outputLogic = 1,
@@ -166,7 +166,47 @@ gpio_output_pin_user_config_t	outputPins[] = {
 			.config.driveStrength = kPortLowDriveStrength,
 		},
 	#elif (WARP_BUILD_ENABLE_FRDMKL03)
+		{
+			.pinName = kWarpPinUnusedPTA8,
+			.config.outputLogic = 1,
+			.config.slewRate = kPortSlowSlewRate,
+			.config.driveStrength = kPortLowDriveStrength,
+
+		},{
+			.pinName = kWarpPinUnusedPTA6,
+			.config.outputLogic = 1,
+			.config.slewRate = kPortSlowSlewRate,
+			.config.driveStrength = kPortLowDriveStrength,
+
+		},
+		{
+			.pinName = kWarpPinUnusedPTA9,
+			.config.outputLogic = 1,
+			.config.slewRate = kPortSlowSlewRate,
+			.config.driveStrength = kPortLowDriveStrength,
+
+		},
+		{
+			.pinName = kWarpPinUnusedPTA12,
+			.config.outputLogic = 1,
+			.config.slewRate = kPortSlowSlewRate,
+			.config.driveStrength = kPortLowDriveStrength,
 
+		},
+		{
+			.pinName = kWarpPinUnusedPTB13,
+			.config.outputLogic = 1,
+			.config.slewRate = kPortSlowSlewRate,
+			.config.driveStrength = kPortLowDriveStrength,
+
+		},
+		{
+			.pinName = kWarpPinUnusedPTB0,
+			.config.outputLogic = 1,
+			.config.slewRate = kPortSlowSlewRate,
+			.config.driveStrength = kPortLowDriveStrength,
+
+		},
 	#endif
 
 	{
diff --git a/tools/scripts/warp.jlink.commands b/tools/scripts/warp.jlink.commands
index da5814a..1d1d2a8 100644
--- a/tools/scripts/warp.jlink.commands
+++ b/tools/scripts/warp.jlink.commands
@@ -1,6 +1,6 @@
 power on perm
 exec EnableRemarks
 unlock kinetis
-loadfile <full-path-to-warp-firmware>/build/ksdk1.1/work/demos/Warp/armgcc/Warp/release/Warp.srec
+loadfile /home/francis_mcmullan/Documents/Coursework_2/Warp-firmware/build/ksdk1.1/work/demos/Warp/armgcc/Warp/release/Warp.srec
 r
 go
